# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-10-16 18:39
from __future__ import unicode_literals

import active.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('game', models.CharField(max_length=128, verbose_name='所管游戏')),
                ('role', models.CharField(default='', max_length=64, verbose_name='权限')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=32, verbose_name='英文别名')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('is_show', models.BooleanField(default=True, verbose_name='展示状态')),
                ('is_open', models.BooleanField(default=True, verbose_name='开启状态')),
                ('valid_day_start', models.TimeField(verbose_name='日启')),
                ('valid_day_end', models.TimeField(verbose_name='日结')),
                ('limit_type', models.SmallIntegerField(choices=[(1, '日'), (2, '周'), (3, '月'), (4, '年')], default=1, verbose_name='限制类型')),
                ('limit_number', models.IntegerField(default=0, verbose_name='限制次数')),
                ('content_table', models.TextField(verbose_name='内容')),
                ('content_desc', models.CharField(max_length=256, verbose_name='描述')),
                ('content_articles', models.CharField(max_length=128, verbose_name='说明')),
                ('submit_forms', models.CharField(blank=True, max_length=256, verbose_name='表单形式')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('image_url', models.ImageField(upload_to=active.models.custom_path, verbose_name='图片链接')),
                ('close_tip', models.CharField(blank=True, max_length=128, verbose_name='关闭提示')),
                ('valid_date_start', models.DateTimeField(verbose_name='开始时间')),
                ('valid_date_end', models.DateTimeField(verbose_name='结束时间')),
                ('category', models.CharField(blank=True, max_length=32, verbose_name='分类')),
                ('audio', models.FileField(blank=True, null=True, upload_to=active.models.custom_path, verbose_name='音频')),
                ('is_new', models.BooleanField(default=False, verbose_name='是否最新')),
                ('weight', models.IntegerField(default=0, verbose_name='权重')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=32, verbose_name='会员账号')),
                ('activity', models.CharField(max_length=32, verbose_name='活动')),
                ('actid', models.IntegerField(default=None, null=True, verbose_name='活动id')),
                ('data', models.TextField(verbose_name='申请信息')),
                ('message', models.CharField(max_length=256, verbose_name='回复内容')),
                ('apply_time', models.DateTimeField(auto_now_add=True, verbose_name='申请时间')),
                ('reply_time', models.DateTimeField(null=True, verbose_name='审核时间')),
                ('auditor', models.CharField(max_length=32, null=True, verbose_name='审核人')),
                ('status', models.SmallIntegerField(choices=[(1, '审核中'), (2, '锁定'), (3, '已派发'), (4, '未通过')], default=1, verbose_name='状态')),
                ('ip', models.GenericIPAddressField(verbose_name='ip地址')),
                ('money', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='金额')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.SmallIntegerField(verbose_name='sort')),
                ('text', models.CharField(max_length=256, verbose_name='文本')),
                ('url', models.CharField(default='javascript:void(0)', max_length=128, verbose_name='链接')),
                ('img', models.ImageField(blank=True, null=True, upload_to=active.models.custom_path, verbose_name='图片链接')),
                ('category', models.CharField(blank=True, max_length=32, verbose_name='分类')),
            ],
        ),
    ]
